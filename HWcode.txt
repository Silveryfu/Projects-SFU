Q01QVCAzNzEgRGF0YSBDb21tdW5pY2F0aW9ucyBhbmQgTmV0d29ya2luZw0KUHJvamVjdCAxDQoNCkR1ZSBkYXRlOiA1OjAwcG0sIE9jdG9iZXIgMjEsIDIwMTMgKE1vbikNCg0KTm90ZTogTGF0ZSBzdWJtaXNzaW9uIHdpbGwgTk9UIGJlIGFjY2VwdGVkISANClRoaXMgaXMgYSBncm91cC1iYXNlZCBwcm9qZWN0LCBhbmQgZWFjaCBncm91cCBzaG91bGQgc3VibWl0IE9ORSBwcmludGVkIHJlcG9ydCBvbmx5LCB3aGljaCBzaG91bGQgaW5jbHVkZSBhbGwgdGhlIHNvdXJjZSBjb2RlcyBhbmQgbmVjZXNzYXJ5IGRpc2N1c3Npb25zLiBQbGVhc2UgaW5jbHVkZSB0aGUgbmFtZXMgYW5kIHN0dWRlbnQgSURzIG9mIGFsbCB0aGUgZ3JvdXAgbWVtYmVycyBpbiB0aGUgcmVwb3J0LiANCg0KR3JhZGluZyBTY2hlbWU6IFRoZSB0b3RhbCBtYXJrIG9mIHByb2plY3QgMSBpcyAxMDAsIHdoaWNoIGNvbnRyaWJ1dGVzIDUlIHRvd2FyZCB0aGUgZmluYWwgZ3JhZGUuDQoNCg0KMS4gKDE1JSkgRmluZCB0aGUgbmFtZXMgYW5kIElQIGFkZHJlc3NlcyBvZiB0aGUgZm9sbG93aW5nIHNlcnZlcnMgYXQNClNGVToNCiAgICAgICAgIFdFQiwgRE5TLCBTU0gsIFNNVFAsIElNQVAgKG9yIFBPUCkNCg0KWW91IG1pZ2h0IGZpbmQgbXVsdGlwbGUgbmFtZXMgb3IgSVAgYWRkcmVzc2VzLCBhbmQgd2Ugd2lsbCBhY2NlcHQgYW55IHJlYXNvbmFibGUgYW5zd2Vycy4gDQoNCg0KMi4gKDMwJSkgSW1wbGVtZW50IGEgYmFzaWMgQ2hvcmQgREhULiBUaGUgaW5wdXQgZm9ybWF0IGlzIGFzIGZvbGxvd3MgOg0KDQogICAgUyAgICAgICAgICAgICAgICAgLy9IYXNoIHNwYWNlIFswhVNdDQogICAgTiAgICAgICAgICAgICAgICAvL051bWJlciBvZiBub2Rlcw0KICAgIE0gICAgICAgICAgICAgICAgLy9OdW1iZXIgb2Yga2V5cw0KICAgIGlkMSwgaWQyLCCFLCBpZE4gICAgIC8vSGFzaGVkIG5vZGUgaWRzLCBqb2luZWQgaW4gb3JkZXINCiAgICBrMSxrMiyFLGtNICAgICAgICAvL0hhc2hlZCBrZXlzLCBqb2luZWQgaW4gb3JkZXINCg0KICBGb3Igc2xpZGVzIEFwcGxpY2F0aW9uIExheWVyIDI6IDUyLTU2LCB0aGUgaW5wdXQgd2lsbCBiZQ0KDQogICAgIDcNCiAgICAgNA0KICAgICAyDQogICAgIDEsMiwwLDYNCiAgICAgNywxDQoNCiAgIFRoZW4gZm9yIGVhY2gga2V5LCBhc3N1bWUgdGhhdCBub2RlIGlkMSB3aWxsIGlzc3VlIGEgcXVlcnkgKGluIHRoZSBhYm92ZSBleGFtcGxlLCBub2RlIDEgd2lsbCBxdWVyeSBrZXkgNywgYW5kIHRoZW4ga2V5IDEuIFlvdSBzaG91bGQgZmluZCBvdXQgdGhlIHBhdGggZm9yIGVhY2ggcXVlcnkuIFlvdXIgcHJvZ3JhbSBzaG91bGQgZmlyc3QgcHJvbXB0IGFuIGlucHV0IGZpbGUgbmFtZSAoc2F5LCBYWFguaW4pLCBhbmQgd3JpdGUgYWxsIHRoZSByZXN1bHRzIChvbmUgcGF0aCBwZXIgbGluZSkgdG8gZmlsZSBYWFgub3V0LiBGb3IgdGhlIGlucHV0IGZpbGUgYWJvdmUsIHRoZSBvdXRwdXQgc2hvdWxkIGJlIA0KDQoxIDYgMCAgICAgICAgICAgICAgICAgICAgICAgLy8gbm9kZSAxIHF1ZXJ5IGtleSA3DQoxICAgICAgICAgICAgICAgICAgICAgICAgICAvL25vZGUgMSBxdWVyeSBrZXkgMQ0KICAgIA0KICBZb3Ugc2hvdWxkIGluY2x1ZGUgeW91ciBjb2RlIGluIHRoZSByZXBvcnQuDQoNCg0KMy4gKDI1JSkgV3JpdGUgYSBiYXNlNjQgZW5jb2Rlciwgd2hpY2ggc2hvdWxkIHJlYWQgYSBiaW5hcnkgZmlsZSAoWFhYLmluKSBhbmQgb3V0cHV0IHRoZSBlbmNvZGVkIGRhdGEgdG8gWFhYLm91dC4gSGVyZSwgWFhYIHJlcHJlc2VudHMgdGhlIGlucHV0IGZpbGUgbmFtZSwgd2hpY2ggc2hvdWxkIGJlIHJlYWQgZnJvbSB0aGUgY29tbWFuZCBsaW5lLiBZb3UgY2FuIGFzc3VtZSB0aGF0IHRoZSB0b3RhbCBudW1iZXIgb2YgYml0cyBvZiB0aGUgaW5wdXQgZmlsZSBpcyBkaXZpc2libGUgYnkgNi4gDQoNCg0KNC4gKDMwJSkgRmluaXNoIFdpcmVTaGFyayBMYWJzIGluIHRoZSB0ZXh0Ym9vayAoUDc4IGFuZCAxODEpIJNQYWNrZXQgc25pZmZlcpQsIJNIVFRQlCwgYW5kIEROUy4gSW5jbHVkZSBhbGwgeW91ciBhbnN3ZXJzIGluIHRoZSByZXBvcnQuIA0KDQo1LiAoT3B0aW9uYWwpIFNvY2tldCBwcm9ncmFtbWluZyBhc3NpZ25tZW50IDE6IFdlYiBTZXJ2ZXIgKHRleHRib29rIFAxNzkpLiBUaGlzIGFzc2lnbm1lbnQgdXNlcyBQeXRob24sIHdpdGggd2hpY2ggc29tZSBzdHVkZW50cyBtYXkgbm90IGJlIGZhbWlsaWFyLiBUaGVyZWZvcmUsIGl0knMgb3B0aW9uYWwgb25seSBhbmQgd2Ugd2lsbCBub3QgbWFyayBpdC4gDQoNCg0K