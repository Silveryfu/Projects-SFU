5.Correctness Section
header.h:
explanation: 
This code is the header of the whole project. It includes all the system library needed, and all the constant parameters of the program (Such as maximum number of processes, levels of MLFQ, etc.).

monitor.h
explanation:
This code is the header of the Monitor used in project. It includes the declaration and the definition of the Lock class (which is used in Monitor) and the usage of the macro of the monitor.

proc.h
proc.cpp
explanation:
This code includes the declaration and definition of class Proc, whose object stands for a individual process. It has several attributes such as priority, PID, proc type, block time, proc state and line of code. And it also has some public methods in order to let outsider access the attributes. And each of the process has a state mutex in order to protect critical sections.
There is another class in this code called ProcWrapper, which is used to wrap time quanta and Proc together. And short-term scheduler will pass the object of this class to slave processor.

readyqueue.h
readyqueue.cpp
blockqueue.h
blockqueue.cpp

masterprocessor.h:
explanation:
This code is the header of master processor, including the declaration of the class MasterProcessor. It also includes the declaration of the short-term, mid-term and long-term schedulers as one of the method in class MasterProcessor.

masterporcessor.cpp
explanation:
This code is the body of class MasterProcessor, including the definition of the respective class. And this code actually includes the whole content of the short-term, mid-term and long-term schedulers.
Job of short-term scheduler:
	Getting process from ready queue, and give the process to an idle space processor with certain time quanta.
Job of mid-term scheduler:
	Checking the Block queue to see if there is any end of IO-Block of a process. If so, get the process out of block queue and put it into ready queue.
Job of long-term scheduler:
	Creating process and deleting process in certain speed.

slaveprocessor.h
explanation:
This code is the header of class SlaveProcessor, including the declaration of the respective class.

slaveprocessor.cpp
explanation:
This code includes the detail information of the definition of the class SlaveProcessor.
The main job of slave processor is to execute the process gained from short-term scheduler and execute the process in certain time quanta.
If the IO-Block happened, slave processor will put the process into block queue.
If process run out of time quanta, slave processor will degrade the priority of the process and put it into ready queue.
If process finished executing, slave process will set the status of process as PROC_EXIT.

main.cpp:

explanation:
This file is the entry of the whole project and the main thread of the program. All the objects (such as Master Processor, Slave Processor, Ready Queue, Block Queue and pipes for communication between Slave processors and short-term schedulers) are initiazlied in the function "main". And the main function will hold to wait all its child threads.




test case 2:



## Short-Term-Scheduler ##:
  Process(PID=2,Priority=3)
  Moved out from ReadyQueue
  with timeQuanta=20
  Assigned to Processor(2)
                               (1) Process(PID=1) executing
                                   Commands to be run:3
## Short-Term-Scheduler ##:
  Process(PID=3,Priority=3)
  Moved out from ReadyQueue
  with timeQuanta=20
  Assigned to Processor(3)
## Long-Term-Scheduler ##:
  Process(PID=5) is created
  Put in ReadyQueue
                               (1) Process(PID=1) exits
                                                              (2) Process(PID=2) executing
                                                                  Commands to be run:27
## Long-Term-Scheduler ##:
  Process(PID=6) is created
  Put in ReadyQueue
                                                                                             (3) Process(PID=3) executing
                                                                                                 Commands to be run:49
## Short-Term-Scheduler ##:
  Process(PID=4,Priority=3)
  Moved out from ReadyQueue
  with timeQuanta=20
  Assigned to Processor(1)
                                                              (2) Process(PID=2) IO-Block
                                                                  Put in BlockQueue
                                                                  Commands to be run:19
## Long-Term-Scheduler ##:
  Process(PID=1) is deleted
                                                                                             (3) Process(PID=3) IO-Block
                                                                                                 Put in BlockQueue
                                                                                                 Commands to be run:33


